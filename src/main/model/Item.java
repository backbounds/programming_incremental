package model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class Item implements Serializable {
    public String name;
    private int cost;
    private double income;
    private List<Upgrade> applicableUpgrades;
    public List<Upgrade> purchasedUpgrades;


    //EFFECTS: creates an item
    public Item(String name, int cost, double income, List<Upgrade> applicableUpgrades) {
        this.name = name;
        this.cost = cost;
        this.income = income;
        this.applicableUpgrades = applicableUpgrades;
        purchasedUpgrades = new ArrayList<>();
    }

    //EFFECTS: returns the income generated by the item
    public double getIncome() {
        return income;
    }

    //EFFECTS: returns the cost of the item
    public int getCost() {
        return cost;
    }

    //EFFECTS: returns applicable upgrades to an item
    public List<Upgrade> getApplicableUpgrades() {
        return applicableUpgrades;
    }

    //REQUIRES: upgrade is in applicableUpgrades
    //MODIFIES: this
    //EFFECTS: adds the upgrade to the item
    public void addUpgrade(Upgrade u) {
        purchasedUpgrades.add(u);
        income = u.applyUpgrade(income);
    }

    //EFFECTS: lists upgrades that belong to this item
    public void listUpgrades() {
        int i = 1;
        for (Upgrade upgrade: applicableUpgrades) {
            if (!purchasedUpgrades.contains(upgrade)) {
                System.out.println(String.format("Upgrade name: %s \n Upgrade description: %s \n "
                                + "Upgrade cost: %s \n Upgrade effect %s \n [%s] to buy or [0] to go back",
                        upgrade.name, upgrade.description, upgrade.cost, upgrade.effect, i));
                i++;
            }
        }
    }
}
